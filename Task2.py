# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NMDVZ6QXGHQGvwRhDdprQaxBi-1vMEzT
"""

import pandas as pd

df  = pd.read_csv("predictive_maintenance.csv")
df.head()

# Time-Based Rolling Features
# Assuming 'Rotational speed [rpm]', 'Torque [Nm]', and 'Tool wear [min]' can benefit from rolling statistics
window_size = 5  # Define window size for rolling operations

for column in ['Air temperature [K]', 'Process temperature [K]', 'Rotational speed [rpm]', 'Torque [Nm]']:
    df[f'{column}_rolling_mean'] = df[column].rolling(window=window_size).mean()
    df[f'{column}_rolling_std'] = df[column].rolling(window=window_size).std()
    df[f'{column}_rolling_min'] = df[column].rolling(window=window_size).min()
    df[f'{column}_rolling_max'] = df[column].rolling(window=window_size).max()

# Lag Features - Capturing recent history
# Adjust lag value (e.g., 1, 2, 3) to capture past values
for lag in range(1, 4):
    df[f'Rotational_speed_lag_{lag}'] = df['Rotational speed [rpm]'].shift(lag)
    df[f'Torque_lag_{lag}'] = df['Torque [Nm]'].shift(lag)
    df[f'Tool_wear_lag_{lag}'] = df['Tool wear [min]'].shift(lag)

# Encoding Categorical Features
# Convert 'Type' and 'Failure Type' to numerical format using One-Hot Encoding
df = pd.get_dummies(df, columns=['Type', 'Failure Type'], drop_first=True)

# Drop NaN values resulting from rolling and lagging operations
df = df.dropna()

# Save the processed dataset to a new CSV file
df.to_csv("processed_maintenance.csv", index=False)

# Show the first few rows of the new DataFrame to verify
print(df.head())

